---
import Layout from '../../layouts/Menus.astro';
const params = Astro;
console.log(params);
const data = {
  name: 'AlchemistCoffeLab',
};
const menu = [
  {
    title: 'BEBIDAS CLÁSICAS',
    items: [
      { name: 'Americano 16oz', precio: 55 },
      { name: 'Flat White 8oz', precio: 58 },
      { name: 'Cappuccino 10oz', precio: 58, nota: 'Con Esencia + $10' },
      {
        name: 'Latte Caliente 12oz',
        precio: 60,
        nota: '16oz + $10 / Con Esencia + $10',
      },
      {
        name: 'Latte Helado 12oz',
        precio: 65,
        nota: '16oz + $10 / Con Esencia + $10',
      },
      { name: 'Café de Olla 16oz', precio: 65 },
      { name: 'Espresso 40ml', precio: 45 },
      {
        name: 'Espresso Phoenix Down',
        precio: 60,
        nota: '50 ml (servido en matraz) Espresso + lechera',
      },
      { name: 'Espresso Macchiato 45ml', precio: 55, nota: 'Con leche' },
      {
        name: 'Affogato',
        precio: 65,
        nota: 'Espresso doble con nieve de vainilla',
      },
      {
        name: 'Espresso Tonic',
        precio: 70,
        nota: 'Espresso o Cold Brew/Con esencia +$10',
      },
    ],
  },
  {
    title: 'BARRA DE BEBIDAS',
    items: [
      { name: 'Matcha', precio: { '12oz': 65, '16oz': 75 } },
      { name: 'Red Velvet', precio: { '12oz': 65, '16oz': 75 } },
      { name: 'Vainilla Chai', precio: { '12oz': 65, '16oz': 75 } },
      { name: 'Chocolate Artesanal', precio: { '12oz': 75, '16oz': 85 } },
      { name: 'Chocolate a la Cereza', precio: { '12oz': 65, '16oz': 75 } },
      { name: 'Taro', precio: { '12oz': 65, '16oz': 75 } },
      { name: 'Latte Frappe', precio: { '12oz': 65, '16oz': 75 } },
      { name: 'Coffee Caramel', precio: { '12oz': 65, '16oz': 75 } },
      { name: 'Mocha Oreo', precio: { '12oz': 70, '16oz': 80 } },
      {
        name: 'Mocha',
        precio: { '12oz': 65, '16oz': 75 },
        nota: 'Chocolate Oscuro o Blanco',
      },
      {
        name: 'Malteada',
        precio: 90,
        nota: 'Nutella, Oreo, Chocolate, Fresa, Vainilla',
      },
      {
        name: 'Soda Italiana',
        precio: 60,
        nota: 'Blue Curacao, Blueberry, Cereza, Fresa, Maracuya, Mango, Manzana Verde',
      },
      {
        name: 'Limonada 5HT + Jarabe',
        precio: { '12oz': 60, '16oz': 70 },
        nota: 'Frappé de lima con jarabe',
      },
      { name: 'Limonada Natural/Mineral 500ml', precio: 55 },
      {
        name: 'Suero de Fresa',
        precio: 65,
        nota: 'Agua Mineral con pulpa de fresa y limón natural',
      },
      { name: 'Agua Mineral 355ml', precio: 35 },
      { name: 'Coca Cola 355ml Regular/Sin azúcar', precio: 35 },
    ],
  },
  {
    title: 'TÉS Y TISANAS',
    items: [
      {
        name: 'Tisana frutal',
        precio: { '12oz': 65, '16oz': 70 },
        nota: 'Caliente, frappé o en las rocas',
      },
      { name: 'Té herbal', precio: 55, nota: 'Té verde, Té negro, Té rojo' },
    ],
  },
  {
    title: 'ESENCIAS',
    items: [
      { name: 'Menta', precio: null },
      { name: 'Avellanas', precio: null },
      { name: 'Crema Irlandesa', precio: null },
      { name: 'Peanut butter', precio: null },
      { name: 'Vainilla Francesa', precio: null },
    ],
  },
  {
    title: 'EXTRAS',
    items: [
      { name: 'Esencias', precio: 10 },
      { name: 'Shot Extra de Café', precio: 12 },
      { name: 'Leche de Almendras/Soya', precio: 12 },
      { name: 'Leche de Avena', precio: 15 },
    ],
  },
];
---

<Layout>
  <div class='bg-[#eddcca]'>
    <div class='container mx-auto px-6'>
      <h1 class='text-4xl font-bold text-center py-4'>{data.name}</h1>
      <div class='grid gap-6 grid-cols-1 lg:grid-cols-2'>
        {
          menu.map((section, sectionIndex) => (
            <div class='space-y-4'>
              <div class='text-2xl font-bold'>{section.title}</div>
              <div class='space-y-4'>
                {section.items?.map((item, itemIndex) => (
                  <div class='flex justify-between'>
                    <div>
                      <h4 class='font-semibold'>{item?.name}</h4>
                      {item?.nota && <p>{item.nota}</p>}
                    </div>
                    <div class='flex gap-4'>
                      {item?.precio && typeof item.precio === 'object' ? (
                        Object.entries(item.precio).map(([size, price]) => (
                          <div>{price}</div>
                        ))
                      ) : (
                        <div>{item?.precio}</div>
                      )}
                    </div>
                  </div>
                ))}
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </div>
</Layout>
