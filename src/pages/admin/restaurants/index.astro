---
import AdminLayout from '../../../layouts/AdminLayout.astro';
import { supabase, createSupabaseClient } from '../../../lib/supabase';
import { isAuthenticated } from '../../../middleware/auth';

// Verificar autenticación
const isAuth = await isAuthenticated(Astro.request, Astro.cookies);
if (!isAuth) {
  return Astro.redirect("/admin/login");
}

// Obtener tokens de las cookies
const accessTokenCookie = Astro.cookies.get("sb-access-token");
const refreshTokenCookie = Astro.cookies.get("sb-refresh-token");
if (!accessTokenCookie || !refreshTokenCookie) {
  return Astro.redirect("/admin/login");
}

// Crear cliente de Supabase con autenticación
const supabaseAuth = createSupabaseClient(
  accessTokenCookie.value,
  refreshTokenCookie.value
);

// Obtener todos los restaurantes
const { data: restaurants, error } = await supabaseAuth
  .from('restaurants')
  .select('*')
  .order('name');

if (error) {
  console.error('Error al obtener restaurantes:', error);
}
---

<AdminLayout title="Restaurantes | Panel de Administrador">
  <div class="flex justify-between items-center mb-6">
    <h1 class="text-2xl font-bold">Restaurantes</h1>
    <a 
      href="/admin/restaurants/new" 
      class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
    >
      Agregar restaurante
    </a>
  </div>
  
  {error && (
    <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-6" role="alert">
      <p>Error al cargar los restaurantes. Por favor, intenta de nuevo más tarde.</p>
    </div>
  )}
  
  <div class="bg-white shadow overflow-hidden sm:rounded-md">
    {restaurants && restaurants.length > 0 ? (
      <ul class="divide-y divide-gray-200">
        {restaurants.map((restaurant) => (
          <li>
            <div class="px-4 py-4 sm:px-6">
              <div class="flex items-center justify-between">
                <p class="text-sm font-medium text-indigo-600 truncate">{restaurant.name}</p>
                <div class="ml-2 flex-shrink-0 flex space-x-2">
                  {restaurant.featured && (
                    <p class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                      Destacado
                    </p>
                  )}
                </div>
              </div>
              <div class="mt-2 sm:flex sm:justify-between">
                <div class="sm:flex">
                  <p class="flex items-center text-sm text-gray-500">
                    {restaurant.address}
                  </p>
                </div>
                <div class="mt-2 flex items-center text-sm text-gray-500 sm:mt-0 space-x-2">
                  <a 
                    href={`/admin/restaurants/edit/${restaurant.id}`} 
                    class="text-indigo-600 hover:text-indigo-900"
                  >
                    Editar
                  </a>
                  <button 
                    data-id={restaurant.id}
                    class="delete-btn text-red-600 hover:text-red-900"
                  >
                    Eliminar
                  </button>
                </div>
              </div>
            </div>
          </li>
        ))}
      </ul>
    ) : (
      <div class="px-4 py-5 sm:px-6 text-center">
        <p class="text-gray-500">No hay restaurantes registrados.</p>
      </div>
    )}
  </div>

  <script>
    // Manejar eliminación de restaurantes
    document.addEventListener('DOMContentLoaded', () => {
      const deleteButtons = document.querySelectorAll('.delete-btn');
      
      deleteButtons.forEach(button => {
        button.addEventListener('click', async () => {
          const id = button.getAttribute('data-id');
          if (!id) return;
          
          if (confirm('¿Estás seguro de que deseas eliminar este restaurante?')) {
            try {
              const response = await fetch(`/api/restaurants/${id}`, {
                method: 'DELETE',
              });
              
              if (response.ok) {
                // Recargar la página para reflejar los cambios
                window.location.reload();
              } else {
                const data = await response.json();
                alert(data.error || 'Error al eliminar el restaurante');
              }
            } catch (error) {
              console.error('Error:', error);
              alert('Error al eliminar el restaurante');
            }
          }
        });
      });
    });
  </script>
</AdminLayout>