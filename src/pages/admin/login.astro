---
import { supabase } from "../../lib/supabase";
import BaseHead from "../../components/BaseHead.astro";
import Footer from "../../components/Footer.astro";
import RestaurantLayout from "../../layouts/RestaurantLayout.astro";

// Middleware-like authentication check
// Middleware-like authentication check
const accessTokenCookie = Astro.cookies.get("sb-access-token");
const refreshTokenCookie = Astro.cookies.get("sb-refresh-token");

console.log("Access Token:", accessTokenCookie);
console.log("Refresh Token:", refreshTokenCookie);

if (accessTokenCookie && refreshTokenCookie) {
  try {
    const { data } = await supabase.auth.getUser(
      accessTokenCookie.value  // Now TypeScript knows this .value exists
    );
    if (data?.user) {
      return Astro.redirect("/admin/dashboard");
    }
  } catch (error) {
    // If token validation fails, continue to login page
    console.error("Token validation error:", error);
  }
}
---

<RestaurantLayout title="Iniciar Sesión" description="Iniciar sesión">
  <div class="h-screen flex items-center justify-center w-screen -mt-20">
    <div class="max-w-md w-full bg-white rounded-lg shadow-md p-8">
      <h1 class="text-2xl font-bold text-center mb-6">
        Panel de Administrador
      </h1>

      <div
        id="error-message"
        class="hidden bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4"
        role="alert"
      >
      </div>

      <form id="login-form" class="space-y-4">
        <div>
          <label for="email" class="block text-sm font-medium text-gray-700">
            Correo electrónico
          </label>
          <input
            type="email"
            id="email"
            name="email"
            required
            autocomplete="email"
            class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm
                 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
          />
        </div>

        <div>
          <label for="password" class="block text-sm font-medium text-gray-700">
            Contraseña
          </label>
          <input
            type="password"
            id="password"
            name="password"
            required
            autocomplete="current-password"
            class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm
                 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
          />
        </div>

        <div>
          <button
            type="submit"
            id="login-button"
            disabled
            class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm
                 text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700
                 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500
                 disabled:opacity-50 disabled:cursor-not-allowed"
          >
            Iniciar sesión
          </button>
        </div>
      </form>
    </div>
  </div>

  <script>
    import { supabase } from "../../lib/supabase";

    document.addEventListener("DOMContentLoaded", () => {
      const form = document.getElementById("login-form");
      const errorMessage = document.getElementById("error-message");
      const emailInput = document.getElementById(
        "email"
      ) as HTMLInputElement | null;
      const passwordInput = document.getElementById(
        "password"
      ) as HTMLInputElement | null;
      const loginButton = document.getElementById(
        "login-button"
      ) as HTMLButtonElement | null;

      if (
        !form ||
        !errorMessage ||
        !emailInput ||
        !passwordInput ||
        !loginButton
      ) {
        console.error("One or more required elements are missing");
        return;
      }
    
      // Enable login button only when both email and password are valid
      const validateInputs = () => {
        const isEmailValid = emailInput.checkValidity();
        const isPasswordValid = passwordInput.checkValidity();
        loginButton.disabled = !(isEmailValid && isPasswordValid);
      };

      emailInput.addEventListener("input", validateInputs);
      passwordInput.addEventListener("input", validateInputs);

      form.addEventListener("submit", async (e) => {
        e.preventDefault();

        // Additional null checks
        if (!loginButton || !errorMessage || !emailInput || !passwordInput)
          return;

        loginButton.disabled = true;
        errorMessage.classList.add("hidden");

        const email = emailInput.value.trim();
        const password = passwordInput.value;

        try {
          const { data, error } = await supabase.auth.signInWithPassword({
            email,
            password,
          });

          if (error) {
            throw new Error(error.message || "Error al iniciar sesión");
          }

          // Store the access token in a cookie
          const accessToken = data.session?.access_token;
          const refreshToken = data.session?.refresh_token;

          if (accessToken && refreshToken) {

            document.cookie = `sb-access-token=${accessToken}; path=/;`;
            document.cookie = `sb-refresh-token=${refreshToken}; path=/;`;
            
            console.log(document.cookie.split(";"));

            window.location.href = "/admin/dashboard";
          }

        } catch (error) {
          if (errorMessage) {
            errorMessage.textContent =
              error instanceof Error ? error.message : "Unknown error";
            errorMessage.classList.remove("hidden");
          }

          if (loginButton) {
            loginButton.disabled = false;
          }
        }
      });
    });
  </script>
</RestaurantLayout>
